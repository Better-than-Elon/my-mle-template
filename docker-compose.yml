version: '3.8'
services:
  oracle-db:
    image: container-registry.oracle.com/database/free:latest
    ports:
      - 1521:1521
    environment:
      - ORACLE_PWD
    healthcheck:
      test: [ "CMD", "sqlplus", "-L", "system/${ORACLE_PWD}@//localhost:1521/FREE", "@healthcheck.sql" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    depends_on:
      oracle-db:
        condition: service_healthy
      zookeeper:
        condition: service_started
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    links:
      - zookeeper

  web:
    depends_on:
      oracle-db:
        condition: service_healthy
      kafka:
        condition: service_started
    container_name: web
    build: .
    command: bash -c "python -m src.kafka_connection && python -m src.split && python -m src.train && python -m src.predict -m LOG_REG -t func && coverage run -m pytest src/unit_tests -W ignore::DeprecationWarning && coverage report -m"
    ports:
      - 5000:5000
    image: aruko/firstdockerfile:test_kafka
    tty: true
    links:
      - oracle-db:database
      - kafka
